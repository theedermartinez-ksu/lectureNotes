HW 5 due Tuesday, October 1

////////////////////////

Today:
- more with sets
- limitations of propositional logic
- intro to predicate logic

////////////////////////

Reminder: set-builder notation

{x : a condition involving x}


{x : x = 2^k, k ∈ ℕ}

////////////////////////

Describe these sets in set builder notation


{5,10,15}



{CIS 115, CIS 200, CIS 300, CIS 301}



{2,4,8,16,32}


///////////////////////////////////////
∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

///////////////////////////////////////

Set union, ⋃

The union of the sets A and B, written A ⋃ B, is the set
of all elements....?


How could we express in set builder notation?

A ⋃ B =


//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

Set intersection, ⋂

The intersection of the sets A and B, written A ⋂ B, is the set
of all elements that are...?


How could we express in set builder notation?

A ⋂ B =

///////////////////////////////////////

Set difference,

/ or \ (means the same thing)

The difference between the sets A and B, written A - B, is the set
of all elements...?


How could we express in set builder notation?

A - B =


/////////////////////////////////////

What do we know if A ⋂ B = A ⋃ B?



What do we know if A - B = A?




What do we know if A - B = B - A?






//////////////////////////////////////
⋃ ⋂ ⋁ ⋀ ∈ ∉
///////////////////////////////////////

A = {1,3,7,10,11,12}

B = {2,3,4,5,6,7}


Find:

A ⋃ B =

A ⋂ B =

A - B =

B - A =


//////////////////

Subset - A is a subset of B, written A ⊆ B, if
    all elements in A are also in B.

(We say A ⊂ B if A is a subset of B but A ≠ B.)




Example:

A = {1,3,4}

B = {1,3,5,8}

--> is A a subset of B?



A = {8,1,3}

B = {1,3,5,8}

--> is A a subset of B?



//////////////////////////////////


Quantifiers - helps describe all or some elements in a set

    ∀ - universal quantifier, read as "for all"

    ∃ - existential quantifier, read as "there exists"



Can we define whether set A is a subset of set B using quantifiers?

A ⊆ B means ??




How could we define whether set A equals set B using quantifiers?




∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

//////////////////////////////////////

(we will come back to sets in a couple of weeks to
do proofs with them)

//////////////////////////////////////

A predicate is a boolean function that represents whether
    an individual has a particular property


Set builder notation: {x : P(x)}

where P(x) is a statement (a predicate) involving x




The set is all such x where P(x) is true

//////////////////////////////////////

Example:

A = {x : x ∈ ℕ ⋀ x^2 ≥ 25 }



P(x) = x ∈ ℕ ⋀ x^2 ≥ 25
    so A = {x : P(x) is true }


What are these saying? Are they true?

P(2) =
P(-6) =
P(10) =

Is 2 in A? Is -6? Is 10?



//////////////////////////////////////

Limitations of propositional logic:

Premises:
    All humans are mortal.
    Socrates is human.

Conclusion
    Therefore, Socrates is mortal.



How would we prove this in propositional logic?

What propositional atoms?

p: all humans are mortal
q: Socrates is a human
r: Socrates is mortal


p, q ⊢ r



///////////////

Predicate logic:

Instead of propositions, we will make claims about
individuals in a domain (a set)


These claims will involve predicates and quantifiers



//////////////////

More with predicates.

Example:

    Domain: {x : x is a student at K-State}
    C(x): whether x is in CIS 301

    Bob is taking: CIS 300, ECE 241, MATH 221, ENGL 200
    Jill is taking: CIS 301, MATH 510, HIST 251, MUSIC 170


    What is the value of C(Bob)? False bob is not in 301

    What is the value of C(Jill)? true vc Jill is in 301

    What is the value of C(Bob) ⋀ C(Jill)? F


////////////////

Quantifiers and predicates

Domain: {strawberry, blueberry, banana, orange, grapefruit, apple}
is fruit
Berry(x): x is a berry
Citrus(x): x is a citrus fruit
Peel(x): x has a peel (that needs to be removed before eating)
Seeds(x): x contains inedible seeds
Bite(x): f is bite-sized

Berry(strawberry) - Yes true
Citrus(strawberry) - No false
Peel(strawberry) - No false
Seeds(strawberry) - no false
Bite(strawberry) - Yes true



Write each statement in English. Is each one true or false?

∀ x (Berry(x))
all fruits are berry
false since banana is not a very

for all x, x is very
x is a fruit

All fruits are berries!!! <-- write like this

Berry(strawberry) & Berry(blueberry )& Berry(banana) & Berry(orange)

FOR ALL STATEMENT IS A GIGANT AND STATEMETNT

    --> how could we express the same statement in our domain
    WITHOUT a quantifier?

∀ = AND


///

∃ x (Citrus(x) ⋀ Seeds(x))

∃ - there exists
x - a fruit
that is citrus and uneatable seeds

there is a fruit thta is a citrus and uneatable seeds


    --> how could we express the same statement in our domain
    WITHOUT a quantifier?

TRUE - AN ORANGE

∃ = OR

CITRUS(strawbery) ^ seeds (strawberry) || citrus(

///

∀ x (Berry(x) ⋀ Bite(x))

For all fruits
all fruits are berries and are bite sized //all fruits have to be berries and bite sized

false an apple is not aberry or bite sized


///

∀ x (Berry(x) → Bite(x))

for all fruits
if they are berries then they are bite sized

true

all berries are bite sized

///

¬(∀ x Peel(x))

Can you think of another way to write the same thing?

//first look without not

for all fruits need to be pealed
NOT all fruits need to be pealed

initially ¬((Peel(strawberry)) ^ (Peel(blueberry))... ^ ¬(Peel(strawberry)) // spead the negative and switch elements

!!(Peel(strawberry)) || !(Peel(blueberry))...


equivalent to: ∃ x !peel(x)





///

¬(∀ x (Seeds(x) → Citrus(x)))

for all fruits, if they have uneatable seeds then they are citrus

not all fruits that has unableable seeds that is citrus

true - an apple has inedible seeds but isn't

Can you think of another way to write the same thing?

∃ x (seeds(x) ^ !citrus())

///

∀ x ¬Peel(x)


all fruits dont need to be pealed

false - banana

!(∃ x peel(x))
there exits, (t

///

¬(∃ x Berry(x))

there does not exits



///

¬(∃ x (Peel(x) ⋀ Citrus(x)))
there does not exits a fruit that we need to peal and is citruss



///

∃ x ¬(Peel(x) ⋀ Seeds(x))


There exists a fruit that does not both need to be peeled and have seeds

or there exiists a fruit that does not need to be peeled or does not have seeds

///

∃ x (Citrus(x) → Berry(x))

there exits (with implies)

there exits a fruits if the cruit is citrus then it is a berry

remember the e is or so

(Citrus(strawberry ) → Berry(strawvery)) ||.....

this whole steemtnt is true if a fruit is not citrus

we probably dont want this, we probably want to say ^ to connect to qualities that we need
to conenct with an and!!

/////////////////

For all: usually connect with... ->

There exists: usually connect with... ^


//////////////////

Quantifiers and sets of numbers.


∀ x ∈ ℝ (x^2 ≥ 0)       //what is this saying? why is it true?




∀ x ∈ ℝ (x^2 > 0)       //Is this true?




∃ x ∈ ℤ (x^2 == 1)       //what is this saying? why is it true?




∃ x ∈ ℤ ∀ y ∈ ℤ (x + y == 1)     //what is this saying? Is it true?




∀ x ∈ ℤ ∃ y ∈ ℤ (x + y == 1)

/////////////////////////////

Next time:
- more with predicate logic translations
- DeMorgan's laws for quantifiers
- Natural deduction rules with quantifiers

//////////////////////