Homework 7 due tonight
    #5: prove that if n is a positive integer, then
        n^5 - n is divisible by 5



    #6: prove that if n is natural number, then:

            1*1! + 2*2! + ... + n*n! = (n+1)! - 1


Homework 8 will be posted today

////////////////////////

New release of Logika available
- Needed to get the proofs of DeMorgan's laws from last week
    to verify
- Shouldn't be needed for the current homework assignment

////////////////////////

Today:
- More with mathematical induction
- Recursive definitions
- Direct proofs

////////////////////////

Idea of mathematical induction, again.


Goal: prove a claim P(n) holds for all natural numbers (or similar) n

The induction domino effect:

    P(1) ∧ ∀ k (P(k) → P(k+1)) → ∀ n P(n)



What is this saying?

    P(1)?

    ∀ k (P(k) → P(k+1))?
        (how do we prove this kind of thing?)






////////////////////////////////////

Induction template.



Let P(n) be a claim about each natural number, n.

How to prove it with mathematical induction?

    P(1) ∧ ∀ k (P(k) → P(k+1)) → ∀ n P(n)



Base case? proving P(1) -- that our claim for the first

Inductive step? Assume that P(k) holds where k is a fixed
(whatever our domain is). We must prove that P(k+1) hold.



Conclusion? ∀ n P(n) (for all n in our domain, P(n) holds)




In BOTH parts: use words to explain your reasoning.
Someone unfamiliar with the proof should be able to read
your argument and follow what you are doing.



//////////////////////////////////////

Example: Prove that the sum of the first n odd numbers is n^2.

    (what is our domain?)


Let P(n) be the claim that... ?
1 + 3 + ...(2n-1)


LHS(n) = sum of first n odd numbers?

Proof by induction.

2n-1
RHS(n) = ?
N^2

base case, ( //must prove that LHS(1) = RHS(1)
1 = 1^2  = 1 we have the 1=1 so the base case holds

Inductive step. We assume the inductive hypothesis --
that p(k) is true for some positivev integer. If Pk is true then LHS (K) = RHS(K) we must show that
p(k+1) is true, or that LHS (K+1)  = RHS (K+1)
 = LHS (K)  + 2(K+1) -1
  = RHS (k)  + 2(K+1) -1
  = k^2 + 2k  +1 .factor
  =(k+1)(k+1)
  = (k+ 1) ^2
  = RHS ( K+1)
  if we can prove the base case and our inductive step
  (homework problem 4)







////////////////////////////////

Let P(n) be the claim that for all nonnegative integers n:
    2^0 + 2^1 + ... + 2^n = 2^(n+1) - 1

We write:
    LHS(n) = ?  2^0 + 2^1 + ... + 2^n
    RHS(n) = ?  2^(n+1) - 1

To prove that P(n) holds for some nonnegative integer n, we must
show ?.

left hand side = rhs
Prove using mathematical induction.

base case, we must prove that p(n) holds for the smallest n in our domain which is n=0
LHS (0) = 2^0 = 1 = 1
RHS (0) + 2^(n+1) - 1 = 1

base case holds

Inductive step

always start with assuming inductive hypotheisis -- that p(k) holds for some nonnegative integer k. We must show that p(k+1) holds
since pk holds we have LHS(K)  = RHS (k)

LHS (K+1) = 2^0 + 2^1 +  + 2^k + 2(k+1)
simpify by LHS(K) + 2^(K+1)
RHS (K) RHS +  2^(n+1) - 1

////////////////////////////////

Recursively defined functions.


To define a function whose domain is the set of natural numbers
(or some other set of integers with a lowest value)

Base case: Specify the value of the function at 1 (or some other
    lowest value). (There may be more than one base case.)
it wont be nececeraly at one, it could be a diffrerent one


Recursive step: Give a rule for finding the value of the function
    at all bigger integers (give a range) from its smaller values
a lot like writing recursive call.




//////////////////////////////////

Example (domain: all natural numbers, 1 and up):

f(1) = 3
f(n) = 2f(n-1) + 3, for n > 1
the second part is the range.


What is f(3)?

2f(2)  + 3
2*9 + 3 = 21
F2 = 2f(1)  + 3 = 2*3  + 3 = 9


//////////////////////////////////

What does this define?

g(1) = 1
g(n) = n * g(n-1), for n > 1

//factorials
n | g(n)
---------
1 | 1
2 |2*g(1) = 2
3 |3*g(2) = 6


//////////////////////////////////

Consider this pattern: 1, 2, 4, 7, 11, 16, 22, ...

Write a recursive definition.

Over natural numbers

f(1)  = 1
f(n) = ??? f(n-1) + n-1 ... n>1

//first write out the base case and figure out the base case

////////////////////////////////

Recursively defined sets:


Consider the subset S of the set of integers, defined as:

Base case: 1, 2 ∈ S


Recursive case: x ∈ S ⋀ y ∈ S → xy ∈ S

--> what are the elements in S?

one and two are in s

s= {1,2

it does not say they have to be diffrerent

s{1,2,2*2 =4, 8, 16
s = all power of two

How to write it in set building notation?

{x: x=2^k, k = Z, k>=0}


////////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

/////////////////////////////////

Now we will look at more informal proofs.

--> why? (prove programs are correct, prove running time,
    prove systems are secure, make inferences, prove specifications
    are consistent, etc.)

///////////////////////////////

Definitions.


An integer n is *even* if n = 2k for some k ∈ ℤ.



An integer n is *odd* if n = 2k + 1 for some k ∈ ℤ.

one bigger than some multiple of 2

Any integer that is not odd is even,
and any integer that is not even is odd.


///////////////////////////////

Direct (conditional) proof


- Often want to prove things of the form: "If P, then Q"

--> how would we do this with natural deduction?

assume P
...
Q



/////////////////////////////

Direct proof template. If P, then Q

Assume P
...
Q





/////////////////////////////

Example: prove that the product of two even integers is even.


If our domain is integers and we have the predicate Even(x), how
would you write this statement in predicate logic?

think of predicate logic

∀x ∀y (Even(x) * Even(y) => even(xy))

pick random j and kj. Assume evenJ and Even Y want: evenJK

What's the idea of proving this in predicate logic?




Direct proof:

let j and k be even integers. We want to show that jk is even.
is j is even, then j= 2a for some integer a. If k is even then k = 2b for some integer b
JK = (2a)(2b)
    = 2(ab)
    ...2(some integer

--> How is our proof similar to natural deduction?

//////////////////////////////

∀ ∃     ∈ ∉     ∅ ⋂ ⋃ ⊂ ⊆   ⋀ ⋁ ¬ →     ℕ ℤ     ≠ ≤ ≥

//////////////////////////////

Example.

The square of any odd integer is odd.

How can we write this in predicate logic?



Direct proof:




////////////////////////////////

Next time:
- more types of proofs